// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Sat Apr 23 13:18:18 2022

MODE MODE_inst
(
	.clk_100M(clk_100M_sig) ,	// input  clk_100M_sig
	.rst_n(rst_n_sig) ,	// input  rst_n_sig
	.mode(mode_sig) ,	// input [2:0] mode_sig
	.sin_sig(sin_sig_sig) ,	// input [15:0] sin_sig_sig
	.AM_sig(AM_sig_sig) ,	// input [15:0] AM_sig_sig
	.FM_sig(FM_sig_sig) ,	// input [15:0] FM_sig_sig
	.PM_sig(PM_sig_sig) ,	// input [15:0] PM_sig_sig
	.ASK_sig(ASK_sig_sig) ,	// input [15:0] ASK_sig_sig
	.FSK_sig(FSK_sig_sig) ,	// input [15:0] FSK_sig_sig
	.PSK_sig(PSK_sig_sig) ,	// input [15:0] PSK_sig_sig
	.sig_out(sig_out_sig) 	// output [13:0] sig_out_sig
);

